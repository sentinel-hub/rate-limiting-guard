version: '2.1'
services:

  redis:
    image: redis:6.0-buster
    container_name: e2etest_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
    entrypoint: redis-server
    command: --port 6379 --save "" --appendonly no

  syncer:
    image: sentinelhub/rate-limiting-guard
    container_name: e2etest_syncer
    build:
      context: ../
      dockerfile: syncer/Dockerfile
    depends_on:
      redis:
        condition: service_healthy
    restart: always
    environment:
      CLIENT_ID: "FAKE_CLIENT_ID"
      CLIENT_SECRET: "FAKE_CLIENT_SECRET"
      SENTINELHUB_ROOT_URL: "http://e2etest_mocksh:8000"
      REDIS_HOST: redis
      REDIS_PORT: 6379

  mocksh:
    image: sentinelhub/rate-limiting-guard-e2etest-mocksh
    container_name: e2etest_mocksh
    build:
      context: ./mocksh/
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy

